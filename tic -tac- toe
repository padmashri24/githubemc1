<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Tic Tac Toe</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f0f0f0;
      text-align: center;
      padding-top: 50px;
    }

    h1 {
      margin-bottom: 20px;
    }

    #board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 5px;
      justify-content: center;
      margin: 0 auto 20px;
    }

    .cell {
      background-color: white;
      font-size: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      border: 2px solid #007bff;
      user-select: none;
    }

    #status {
      font-size: 24px;
      margin: 20px;
    }

    button {
      padding: 10px 20px;
      font-size: 16px;
      background-color: #007bff;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    button:hover {
      background-color: #0056b3;
    }
  </style>
</head>
<body>

  <h1>Tic Tac Toe</h1>
  <div id="board"></div>
  <div id="status">Player X's turn</div>
  <button onclick="resetGame()">Reset Game</button>

  <script>
    const boardElement = document.getElementById("board");
    const statusElement = document.getElementById("status");

    let board = ["", "", "", "", "", "", "", "", ""];
    let currentPlayer = "X";
    let gameActive = true;

    function createBoard() {
      boardElement.innerHTML = "";
      board.forEach((cell, index) => {
        const cellElement = document.createElement("div");
        cellElement.classList.add("cell");
        cellElement.dataset.index = index;
        cellElement.textContent = cell;
        cellElement.addEventListener("click", handleCellClick);
        boardElement.appendChild(cellElement);
      });
    }

    function handleCellClick(e) {
      const index = e.target.dataset.index;

      if (board[index] !== "" || !gameActive) return;

      board[index] = currentPlayer;
      e.target.textContent = currentPlayer;

      if (checkWin()) {
        statusElement.textContent = `Player ${currentPlayer} wins!`;
        gameActive = false;
      } else if (board.every(cell => cell !== "")) {
        statusElement.textContent = "It's a draw!";
        gameActive = false;
      } else {
        currentPlayer = currentPlayer === "X" ? "O" : "X";
        statusElement.textContent = `Player ${currentPlayer}'s turn`;
      }
    }

    function checkWin() {
      const winPatterns = [
        [0, 1, 2],
        [3, 4, 5],
        [6, 7, 8],
        [0, 3, 6],
        [1, 4, 7],
        [2, 5, 8],
        [0, 4, 8],
        [2, 4, 6]
      ];

      return winPatterns.some(pattern => {
        const [a, b, c] = pattern;
        return board[a] && board[a] === board[b] && board[a] === board[c];
      });
    }

    function resetGame() {
      board = ["", "", "", "", "", "", "", "", ""];
      currentPlayer = "X";
      gameActive = true;
      statusElement.textContent = "Player X's turn";
      createBoard();
    }

    // Initialize board on page load
    createBoard();
  </script>

</body>
</html>
